{
    "hints": {
        "post_update()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_payout_model(uint64[6],uint64[6])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_payout_model()(uint64[6],uint64[6])": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            },
            "structs": {
                "output": {
                    "name": "PayoutModel",
                    "elements": [
                        [
                            "multipliers",
                            "uint64[6]"
                        ],
                        [
                            "probabilities",
                            "uint64[6]"
                        ]
                    ]
                }
            }
        },
        "get_payout(uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_version(uint64,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "approve_update(bool)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "grant_upgrader(address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "transfer(address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgpjb250cmFjdC5TbG90TWFjaGluZVBheW91dE1vZGVsLmNsZWFyX3N0YXRlX3Byb2dyYW06CiAgICAvLyBzcmMvc3JjL2NvbnRyYWN0LnB5OjI1MQogICAgLy8gY2xhc3MgU2xvdE1hY2hpbmVQYXlvdXRNb2RlbChTbG90TWFjaGluZVBheW91dE1vZGVsSW50ZXJmYWNlLCBVcGdyYWRlYWJsZSwgRGVsZXRlYWJsZSk6CiAgICBpbnQgMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 3,
            "num_uints": 4
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "contract_version": {
                    "type": "uint64",
                    "key": "contract_version"
                },
                "deletable": {
                    "type": "uint64",
                    "key": "deletable"
                },
                "deployment_version": {
                    "type": "uint64",
                    "key": "deployment_version"
                },
                "owner": {
                    "type": "bytes",
                    "key": "owner"
                },
                "payout_model": {
                    "type": "bytes",
                    "key": "payout_model"
                },
                "updatable": {
                    "type": "uint64",
                    "key": "updatable"
                },
                "upgrader": {
                    "type": "bytes",
                    "key": "upgrader"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "SlotMachinePayoutModel",
        "desc": "\n    A simple slot machine payout model\n    ",
        "methods": [
            {
                "name": "post_update",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                },
                "desc": "Post update"
            },
            {
                "name": "set_payout_model",
                "args": [
                    {
                        "type": "uint64[6]",
                        "name": "multipliers"
                    },
                    {
                        "type": "uint64[6]",
                        "name": "probabilities"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                },
                "desc": "Set the payout model"
            },
            {
                "name": "get_payout_model",
                "args": [],
                "readonly": true,
                "returns": {
                    "type": "(uint64[6],uint64[6])"
                },
                "desc": "Get the payout model"
            },
            {
                "name": "get_payout",
                "args": [
                    {
                        "type": "uint64",
                        "name": "bet_amount"
                    },
                    {
                        "type": "uint64",
                        "name": "r"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                },
                "desc": "Get the payout for a bet"
            },
            {
                "name": "set_version",
                "args": [
                    {
                        "type": "uint64",
                        "name": "contract_version"
                    },
                    {
                        "type": "uint64",
                        "name": "deployment_version"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "approve_update",
                "args": [
                    {
                        "type": "bool",
                        "name": "approval"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "grant_upgrader",
                "args": [
                    {
                        "type": "address",
                        "name": "upgrader"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "transfer",
                "args": [
                    {
                        "type": "address",
                        "name": "new_owner"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                },
                "desc": "Transfer ownership of the contract to a new owner. Emits OwnershipTransferred event."
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "update_application": "CALL",
        "delete_application": "CALL",
        "no_op": "CREATE"
    }
}